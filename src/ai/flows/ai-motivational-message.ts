
'use server';
/**
 * @fileOverview An AI flow to generate a MINIMAL motivational message for testing.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Original input schema for the function signature (still used by WelcomeMessage component)
const MotivationalMessageInputSchema = z.object({
  userName: z.string().describe('The name of the user.'),
  todaysEvents: z.array(z.string()).optional().describe("A list of today's scheduled calendar event titles or summaries. Can be empty."),
  userTasksSummary: z.array(z.string()).optional().describe('A list of summaries for tasks assigned to the user. Can be empty.'),
});
export type MotivationalMessageInput = z.infer<typeof MotivationalMessageInputSchema>;

// Output schema for the AI
const MotivationalMessageOutputSchema = z.object({
  message: z.string().describe('The personalized and motivational message generated by the AI.'),
});
export type MotivationalMessageOutput = z.infer<typeof MotivationalMessageOutputSchema>;


// Minimal prompt for testing basic AI call
const minimalMotivationalPrompt = ai.definePrompt({
  name: 'minimalMotivationalMessageGenPrompt_v3', // New unique name
  prompt: `Create a very short, generic, uplifting message for {{userName}}. Your response MUST be ONLY the uplifting message text, no JSON, no extra words. Example: Hello {{userName}}, have a wonderful day!`,
});

export async function generateMotivationalMessage(input: MotivationalMessageInput): Promise<MotivationalMessageOutput> {
  const apiKeyExists = !!process.env.GOOGLE_API_KEY;
  const apiKeyLength = process.env.GOOGLE_API_KEY?.length || 0;
  console.log(`[AI Motivational Flow - MINIMAL] GOOGLE_API_KEY Check: Exists: ${apiKeyExists}, Length (approx): ${apiKeyLength > 0 ? 'Non-zero' : 'Zero'}`);

  console.log(`[AI Motivational Flow - MINIMAL] ENTERING for user: ${input.userName}. Full input received: ${JSON.stringify(input)}`);

  try {
    const minimalInput = { userName: input.userName };
    console.log(`[AI Motivational Flow - MINIMAL] CALLING MINIMAL PROMPT with: ${JSON.stringify(minimalInput)}`);

    const response = await minimalMotivationalPrompt(minimalInput);
    const rawTextResponse = response.text; // Use .text for direct text output from Genkit 1.x

    console.log(`[AI Motivational Flow - MINIMAL] RAW TEXT RESPONSE FROM MINIMAL PROMPT for ${input.userName}: "${rawTextResponse}"`);

    if (rawTextResponse && rawTextResponse.trim() !== '') {
      console.log(`[AI Motivational Flow - MINIMAL] SUCCESS for ${input.userName}. Processed message: "${rawTextResponse.trim()}"`);
      return { message: rawTextResponse.trim() };
    }
    
    console.warn(`[AI Motivational Flow - MINIMAL] AI message prompt returned null or empty text for user ${input.userName}. Raw text: "${rawTextResponse}". Falling back.`);
    return { message: `Merhaba ${input.userName}, AI mesajı alınamadı (Boş Yanıt).` };

  } catch (promptError: any) {
    console.error(
      `[AI Motivational Flow - MINIMAL] CRITICAL PROMPT ERROR - MINIMAL for user ${input.userName}.
      Error Name: ${promptError.name}
      Message: ${promptError.message}
      Input to prompt (minimal): ${JSON.stringify({ userName: input.userName })}
      Full Input to function: ${JSON.stringify(input)}
      Stack: ${promptError.stack}
      Falling back.`
    );
    return { message: `Merhaba ${input.userName}, AI mesajı oluşturulurken kritik bir sunucu hatası oluştu (Kod: PROMPT_EXEC_FAIL_MINIMAL). Lütfen API anahtarınızı ve model erişiminizi kontrol edin.` };
  }
}
