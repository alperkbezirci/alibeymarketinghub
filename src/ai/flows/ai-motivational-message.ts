'use server';
/**
 * @fileOverview An AI flow to generate a motivational message based on
 * the user's tasks and calendar events.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const MotivationalMessageInputSchema = z.object({
  userName: z.string().describe('The name of the user.'),
  todaysEvents: z.array(z.string()).optional().describe('A list of today\'s scheduled calendar event titles or summaries. Empty if no events.'),
  userTasksSummary: z.array(z.string()).optional().describe('A list of summaries for tasks assigned to the user, e.g., ["Proje X (Devam Ediyor)", "Proje Y (Tamamlandı)"]. Empty if no tasks.'),
});
export type MotivationalMessageInput = z.infer<typeof MotivationalMessageInputSchema>;

const MotivationalMessageOutputSchema = z.object({
  message: z.string().describe('The personalized and motivational message generated by the AI.'),
});
export type MotivationalMessageOutput = z.infer<typeof MotivationalMessageOutputSchema>;

const motivationalPrompt = ai.definePrompt({
  name: 'generateMotivationalMessagePrompt',
  input: { schema: MotivationalMessageInputSchema },
  output: { schema: MotivationalMessageOutputSchema },
  prompt: `Sen son derece pozitif, esprili, motive edici ve kullanıcı dostu bir asistansın. Görevin, kullanıcının gününe özel, aşağıdaki bilgileri kullanarak onu motive edecek ve gülümsetecek bir mesaj hazırlamak.
Yanıtın KESİNLİKLE ve SADECE aşağıdaki JSON formatında olmalıdır. JSON bloğunun ÖNCESİNDE veya SONRASINDA kesinlikle başka hiçbir metin, açıklama veya karakter olmamalıdır.
{
  "message": "üretilecek kişiselleştirilmiş ve motive edici mesaj buraya gelecek"
}
---
Kullanıcı Adı: {{userName}}

{{#if todaysEvents.length}}
Bugünün Takvim Etkinlikleri:
{{#each todaysEvents}}
- {{{this}}}
{{/each}}
{{else}}
Görünüşe göre bugün takviminde özel bir etkinlik işaretli değil.
{{/if}}

{{#if userTasksSummary.length}}
Sana Atanmış Bazı Görevlerin Durumu:
{{#each userTasksSummary}}
- {{{this}}}
{{/each}}
{{else}}
Üzerinde çalıştığın belirli bir görev özeti şu an için görünmüyor.
{{/if}}

Yönergeler:
1.  Mesajına doğrudan başla (Örn: "Günün enerjisi seninle olsun, {{userName}}!" veya "Hey {{userName}}, bugünün yıldızı sensin gibi!"). "Merhaba" ile başlamana gerek yok, çünkü bu zaten ana başlıkta var.
2.  Eğer varsa, bugünün takvim etkinliklerinden bir veya ikisine kısaca değin. ("Bugün '{{todaysEvents.[0]}}' etkinliğin varmış, harika geçeceğine eminim!" gibi).
3.  Eğer varsa, kullanıcının görevlerinden birkaçına ve durumlarına değinerek onu teşvik et. ("'{{userTasksSummary.[0]}}' göreviyle harika gidiyorsun!" veya "'{{userTasksSummary.[1]}}' görevi için son bir gayret!").
4.  Genel olarak olumlu, motive edici ve belki biraz da esprili bir dil kullan.
5.  Eğer etkinlik veya görev yoksa, bunu da pozitif bir şekilde yorumla ("Takviminde bugün boşluk var gibi, belki yeni maceralara yelken açma zamanıdır?" veya "Görev listesi sakin görünüyor, bu da yeni başlangıçlar için harika bir fırsat demek!").
6.  Mesajı kısa ve öz tut (2-4 cümle ideal).
7.  UNUTMA: Yanıtın SADECE ve SADECE belirtilen JSON formatında olmalıdır: { "message": "..." }
`,
});

export async function generateMotivationalMessage(input: MotivationalMessageInput): Promise<MotivationalMessageOutput> {
  console.log(`[AI Motivational Flow] ENTERING generateMotivationalMessage for user ${input.userName}`);
  try {
    const promptInput = {
        userName: input.userName,
        todaysEvents: input.todaysEvents || [],
        userTasksSummary: input.userTasksSummary || [],
    };
    console.log(`[AI Motivational Flow] Calling motivationalPrompt for user ${input.userName}. Input to AI: ${JSON.stringify(promptInput, null, 2)}`);

    const response = await motivationalPrompt(promptInput);
    const modelOutput = response.output;

    const rawContent = response.raw?.choices?.[0]?.message?.content ?? 'Raw response could not be obtained or was empty.';
    console.log(`[AI Motivational Flow] Raw AI response for user ${input.userName}:`, rawContent);
    console.log(`[AI Motivational Flow] Parsed AI output (modelOutput) for user ${input.userName}:`, modelOutput);

    if (modelOutput && typeof modelOutput.message === 'string' && modelOutput.message.trim() !== '') {
      console.log(`[AI Motivational Flow] Successfully generated AI motivational message for ${input.userName}.`);
      return modelOutput;
    }
    
    console.warn(`[AI Motivational Flow] AI prompt returned null, empty, or malformed output for user ${input.userName}. Falling back.`);
    console.warn(`[AI Motivational Flow] Details: modelOutput.message was "${modelOutput?.message}". Raw content was: "${rawContent}"`);
    return { message: `Bugün harika işler başaracağına eminim, ${input.userName}! (Sistem varsayılan mesajı - AI format sorunu)` };

  } catch (promptError: any) {
    console.error(
      `[AI Motivational Flow] Error DURING motivationalPrompt call for user ${input.userName}. Error: ${promptError.message}. Input (condensed): ${JSON.stringify({userName: input.userName, eventsCount: input.todaysEvents?.length, tasksCount: input.userTasksSummary?.length})}. Falling back.`,
      promptError.stack
    );
    return { message: `Enerjini yüksek tut, ${input.userName}! Harika bir gün seni bekliyor! (Sistem varsayılan mesajı - AI prompt hatası)` };
  }
}
