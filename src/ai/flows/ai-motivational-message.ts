
'use server';
/**
 * @fileOverview An AI flow to generate a super simple personalized greeting.
 * THIS IS A RESET TO THE MOST BASIC FORM.
 */

console.log('<<<<< DEBUG: ai-motivational-message.ts SCRIPT EXECUTING - SUPER SIMPLE RESET >>>>>');

import {ai} from '@/ai/genkit';
import {z} from 'zod';

// 1. Yeni ve Basit Giriş Şeması
const SuperSimpleInputSchema = z.object({
  userName: z.string().describe('The name of the user.'),
});
export type SuperSimpleInput = z.infer<typeof SuperSimpleInputSchema>;

// 2. Yeni ve Basit Çıkış Şeması
const SuperSimpleOutputSchema = z.object({
  message: z.string().describe('The super simple greeting message generated by the AI.'),
});
export type SuperSimpleOutput = z.infer<typeof SuperSimpleOutputSchema>;

// 3. Yeni ve Basit Prompt Tanımı
const superSimpleGreetingPrompt = ai.definePrompt({
  name: 'superSimpleGreetingPrompt_v1', // Yeni ve benzersiz bir ad
  input: {schema: SuperSimpleInputSchema},
  output: {schema: SuperSimpleOutputSchema},
  prompt: `You are a friendly assistant. Generate a very short, cheerful, one-sentence greeting in TURKISH for {{userName}}.
  The message should be EXTREMELY simple. For example: "Merhaba {{userName}}, harika bir gün geçir!"
  
  IMPORTANT: Respond ONLY with the JSON object matching the output schema, like this:
  {
    "message": "Merhaba {{userName}}, umarım günün çok güzel geçer!"
  }
  
  Do NOT add any other text or explanations.
  User Name: {{userName}}
  `,
  config: {
    safetySettings: [ // Keep safety settings minimal for this test
      { category: 'HARM_CATEGORY_DANGEROUS_CONTENT', threshold: 'BLOCK_MEDIUM_AND_ABOVE' },
    ],
  }
});

// 4. Güncellenmiş Ana Fonksiyon
export async function generateMotivationalMessage(input: SuperSimpleInput): Promise<SuperSimpleOutput> {
  console.log('[AI Super Simple Flow] ENTERING generateMotivationalMessage for user:', input.userName);
  const apiKeyExists = !!process.env.GOOGLE_API_KEY;
  const apiKeyLength = process.env.GOOGLE_API_KEY?.length || 0;
  console.log(`[AI Super Simple Flow] GOOGLE_API_KEY Check: Exists: ${apiKeyExists}, Length (approx): ${apiKeyLength > 0 ? apiKeyLength : 'Zero'}`);
  console.log(`[AI Super Simple Flow] Input received: ${JSON.stringify(input)}`);

  try {
    console.log(`[AI Super Simple Flow] CALLING superSimpleGreetingPrompt_v1 with input: ${JSON.stringify(input)}`);
    const response = await superSimpleGreetingPrompt(input);
    const modelOutput = response.output;

    console.log(`[AI Super Simple Flow] RAW RESPONSE from superSimpleGreetingPrompt_v1 for ${input.userName}:`, response.raw?.choices[0]?.message?.content);
    console.log(`[AI Super Simple Flow] PARSED OUTPUT from superSimpleGreetingPrompt_v1 for ${input.userName}:`, modelOutput);

    if (modelOutput && typeof modelOutput.message === 'string' && modelOutput.message.trim() !== '') {
      console.log(`[AI Super Simple Flow] SUCCESS for ${input.userName}. Parsed message: "${modelOutput.message.trim()}"`);
      return {message: modelOutput.message.trim()};
    }
    
    const rawResponseForLog = modelOutput ? JSON.stringify(modelOutput) : "Output was undefined or not in expected schema";
    console.warn(`[AI Super Simple Flow] AI message prompt returned null, empty message, or malformed output for user ${input.userName}. Parsed output: ${rawResponseForLog}. Falling back.`);
    return {message: `Merhaba ${input.userName}, sana özel mesaj şu anda oluşturulamadı ama harika bir gün geçirmeni dilerim! (Kod: FALLBACK_SUPER_SIMPLE)`};

  } catch (promptError: any) {
    console.error(
      `[AI Super Simple Flow] CRITICAL PROMPT ERROR - superSimpleGreetingPrompt_v1 for user ${input.userName}.
      Error Name: ${promptError.name}
      Message: ${promptError.message}
      Input to prompt: ${JSON.stringify(input)}
      Stack: ${promptError.stack || 'No stack available'}
      Cause (underlying error from API if available): ${JSON.stringify(promptError.cause || 'N/A')} 
      Full Error Object: ${JSON.stringify(promptError, Object.getOwnPropertyNames(promptError))}
      Falling back.`
    );
    return {message: `Merhaba ${input.userName}, AI mesajı oluşturulurken bir sunucu hatası oluştu (Kod: PROMPT_EXEC_FAIL_SUPER_SIMPLE). API anahtarınızı ve model erişiminizi kontrol etmeniz gerekebilir.`};
  }
}
